{%- set license_classifiers = {
    'MIT': 'License :: OSI Approved :: MIT License',
    'BSD-3-Clause': 'License :: OSI Approved :: BSD License',
    'ISC': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache-2.0': 'License :: OSI Approved :: Apache Software License',
    'GPL-3.0-only': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}
[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
description = "{{ cookiecutter.project_short_description }}."
authors = ["{{ cookiecutter.full_name.replace('\"', '\\\"') }} <{{ cookiecutter.email }}>"]
readme = "README.md"
{%- if cookiecutter.open_source_license in license_classifiers %}
license =  "{{ cookiecutter.open_source_license }}"
{%- endif %}

[tool.poetry.dependencies]
python = "^3.7,<4.0"
click = "^8.1.3"
python-dotenv = "^0.20.0"
{%- if "y" in cookiecutter.use_sqlalchemy | lower %}
sqlalchemy = "^1.4.37"
# TODO allow user to select driver
pymssql = "^2.2.5"
{%- endif %}
{%- if "y" in cookiecutter.use_alembic | lower %}
alembic = "^1.8.0"
{%- endif %}
{%- if "y" in cookiecutter.include_cli_tables | lower %}
tabulate = "^0.8.10"
{%- endif %}
{%- if "y" in cookiecutter.include_cli_charts | lower %}
termgraph = "^0.5.3"
{%- endif %}
black = {version="^22.3.0", optional=true}
isort = {version="^5.8.0", optional=true}
flake8 = {version="^3.9.2", optional=true}
flake8-docstrings = {version="^1.6.0", optional=true}
pytest = {version="^7.1.2", optional=true}
pytest-cov = {version="^2.12.0", optional=true}
pytest-structlog = {version="^0.6", optional=true}
bump2version = {version="^1.0.1", optional=true}

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
    "pytest-structlog",
    ]

dev = ["bump2version"]

[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = '{{ cookiecutter.pkg_name }}.cli.cli:cli'

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"